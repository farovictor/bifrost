services:
  bifrost:
    build: .
    ports:
      - "3333:3333"
    environment:
      BIFROST_SIGNING_KEY: "Ymlmcm9zdA=="
      BIFROST_PORT: "3333"
      REDIS_ADDR: ${REDIS_ADDR:-redis:6379}
      POSTGRES_DSN: ${POSTGRES_DSN:-postgres://bifrost:bifrost@postgres:5432/bifrost?sslmode=disable}
      BIFROST_ADMIN_API_KEY: "testadmin"
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
      setup-job:
        condition: service_completed_successfully
    networks:
      - internal

  cli:
    build: .
    profiles:
      - cli
    environment:
      BIFROST_SIGNING_KEY: "Ymlmcm9zdA=="
      BIFROST_PORT: "3333"
      REDIS_ADDR: ${REDIS_ADDR:-redis:6379}
      POSTGRES_DSN: ${POSTGRES_DSN:-postgres://bifrost:bifrost@postgres:5432/bifrost?sslmode=disable}
      BIFROST_ADMIN_API_KEY: "testadmin"
    entrypoint: ["/app/bifrost-cli"]
    networks:
      - internal

  setup-job:
    build: .
    environment:
      BIFROST_SIGNING_KEY: "Ymlmcm9zdA=="
      BIFROST_PORT: "3333"
      REDIS_ADDR: ${REDIS_ADDR:-redis:6379}
      POSTGRES_DSN: ${POSTGRES_DSN:-postgres://bifrost:bifrost@postgres:5432/bifrost?sslmode=disable}
      BIFROST_ADMIN_API_KEY: "testadmin"
    entrypoint: ["/app/bifrost-cli"]
    command: ["init-admin", "--name", "admin", "--org-name", "demo-org", "--email", "admin@admin.com"]
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: "no"
    networks:
      - internal

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - internal

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: bifrost
      POSTGRES_PASSWORD: bifrost
      POSTGRES_DB: bifrost
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "bifrost"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh:ro
      - ./migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - internal

  testserver:
    build: ./testserver
    ports:
      - "8081:8081"
    environment:
      TESTSERVER_PORT: "8081"
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
